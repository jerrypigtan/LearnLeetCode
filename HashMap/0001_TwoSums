Example 1:
Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].


class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> map = new HashMap<>();

        for(int i = 0; i < nums.length; i++){
            int currentVal = nums[i];
            int complement = target - currentVal;

            if(map.containsKey(complement)){
                return new int[] {map.get(complement), i};
            }
            else{
                // next number will find the key
                map.put(currentVal, i);
            }
        }

        return null;
    }
}
